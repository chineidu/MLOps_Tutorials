name: Workflow 2

on:  # trigger(s)
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env: # Workflow level
  DB_PATH: ${{ secrets.DB_PATH }}

jobs:
  build:  # Job 1
    env:  # Job level
      MY_NAME: Neidu
    runs-on: ubuntu-latest
    outputs:
      result1: ${{ steps.step1.outputs.result1 }}
    steps:
      - name: Repo Checkout
        uses: actions/checkout@v4
      - name: Python Setup
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: Gr1N/setup-poetry@v8
      - name: Poetry Cache Setup
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - name: Install Dependencies
        run: |
          cd my-app && poetry install
          pip list
          echo "dependencies installed by ${MY_NAME}"
      - name: Run Code
        run: |
          cd my-app
          poetry run python main.py
          echo DB_PATH: ${{ env.DB_PATH }}

      - name: Output A Filename
        id: step1
        run: |
          cd my-app
          find *.py -type f -execdir echo 'result1={}' ';' >> "$GITHUB_OUTPUT"

  deploy: # Job 2
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Pytbon Setup
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Access Previous Job Output
        run:
          echo "${{ needs.build.outputs.result1 }}"
      - name: Deploy Code
        env:  # Step level
          TEXT: Done
        run: |
          echo "Deploying ${TEXT} ... "
